@import './ease.less';

.overlaybg() {
  animation: overlaybg 1s @easeOutExpo 0s 1 forwards;
  opacity: 0;
  @keyframes overlaybg {
    100% {
      opacity: 1;
    }
  }
}

.popup() {
  animation: popup .3s @easeOutExpo 0s 1 forwards;
  opacity: 0;
  transform: scale(0.5);
  @keyframes popup {
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
}

.list-enter-active,
.list-leave-active {
  transition: all 0.5s @easeInOutSine;
}
.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: translateX(-1em);
}


.fadein(@duration:0.5s, @plusdelay:0, @opacity: 1) {
  opacity: 0;
  animation: fadein @duration linear 0s 1 forwards;
  @keyframes fadein {
    100% { opacity: @opacity; }
  }
  each(range(99), {
    &:nth-child(@{index}) {
      animation-delay: @plusdelay + (@index * 0.01s);
    }
  });
}

.fadepopin(@duration: 0.5s, @perdelay: 0.01s, @plusdelay:0, @opend: 1) {
  opacity: 0;
  transform: scale(0.8);
  transform-origin: center;
  animation: fadein @duration @easeInOutExpo 0s 1 forwards;
  @keyframes fadein {
    100% { opacity: @opend; transform: scale(1); }
  }
  each(range(99), {
    &:nth-child(@{index}) {
      animation-delay: @plusdelay + (@index * @perdelay);
    }
  });
}

.clipopen(@direction: topleft, @duration: .3s) {
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
  animation: clipopentopleft @duration @easeInOutExpo 0s 1 forwards;
  @keyframes clipopentopleft {
    100% { 
      clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
  }
}

.invisible, .visible {
  transition: all 1s @easeInOutExpo;
}

.visible {
  each(range(0,20,1), {
    &:nth-child(@{value}) {
      transition-delay: @value * 0.1s;
    }
  })
}

.invisible {
  opacity: 0;
  transform: translateY(3rem);
}
.visible {
  opacity: 1;
  transform: translateY(0rem);
}


.invisible-container, .visible-container {
  > * {
    transition: all 1.5s @easeInOutExpo;
  }
}

.visible-container {
  > * {
    each(range(0,20,1), {
      &:nth-child(@{value}) {
      transition-delay: @value * 0.05s;
    }
  })
  }
}

.invisible-container {
  > * {
    opacity: 0;
    transform: translateY(5rem);
  }
}
.visible-container {
  > * {
    opacity: 1;
    transform: translateY(0rem);
  }
}