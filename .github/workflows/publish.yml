name: Publish to live site workflow

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  repository_dispatch:
    types: [trigger-workflow]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NUXT_APP_BASE_URL: /
  NUXT_SITE_ENV: production

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: download github modules
        run: |
          git clone -b preview https://github.com/Language-Technology-Assessment/main-database.git ./repos/data
          git clone -b preview https://github.com/Language-Technology-Assessment/European-open-AI-index.git ./repos/website
      - name: Detect package manager
        id: detect-package-manager
        run: yarn install
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Install dependencies
        run: yarn ${{ steps.detect-package-manager.outputs.command }}
      - name: Static HTML export with Nuxt
        run: yarn run generate
        env:
          githubtoken: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
